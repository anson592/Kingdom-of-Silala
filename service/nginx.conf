
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    client_max_body_size 30M;

    sendfile on;
    keepalive_timeout 300;
    send_timeout 300;

    ssl_certificate ./ssrca/lza.frp.sztulives.cn_nginx/lza.frp.sztulives.cn_bundle.crt;
    ssl_certificate_key ./ssrca/lza.frp.print.sztulives.cn_nginx/lza.frp.print.sztulives.cn.key;
    server {
        listen 460 ssl;
        server_tokens off;
        root html;
        server_name *.frp.sztulives.cn;
        ssl_certificate ./ssrca/lza.frp.sztulives.cn_nginx/lza.frp.sztulives.cn_bundle.crt;
        ssl_certificate_key ./ssrca/lza.frp.sztulives.cn_nginx/lza.frp.sztulives.cn.key;
        keepalive_timeout 5;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # 可参考此 SSL 协议进行配置
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;

        location /queue/join {
            proxy_read_timeout 300;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_pass http://localhost:7090/queue/join;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade "websocket";
            proxy_set_header Connection "Upgrade";
        }

        location / {
            proxy_read_timeout 300;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_pass http://localhost:7090;
            proxy_set_header Host $host;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
    }
}
